# Importing the required libraries
import pymongo
import pprint as pp


pp.sorted = lambda x, key=None: x
client = pymongo.MongoClient("mongodb://localhost:27017/")

db = client['querying_assignment']

db.list_collection_names()

pp.pprint(
    db.challenge.find_one()
)



1. Find the number of documents in the collection
num_documents = db.challenge.count_documents({})
print("Number of documents in the collection:", num_documents)



2. Find the number of unique `programming_language` and `challenge_id`
unique_languages = db.challenge.distinct("programming_language")
unique_challenge_ids = db.challenge.distinct("challenge_id")
print("Number of unique programming languages:", len(unique_languages))
print("Number of unique challenge IDs:", len(unique_challenge_ids))



3. How many documents are there where the challenge was created between `2009-01-01` and `2010-01-01`? 
start_date = datetime(2009, 1, 1)
end_date = datetime(2010, 1, 1)
num_documents_in_range = db.challenge.count_documents({"publish_date": {"$gte": start_date, "$lt": end_date}})
print("Number of documents created between 2009-01-01 and 2010-01-01:", num_documents_in_range)



4. How many challenges have been written by author `AI563576` in either `programming_language` `1` or `3` ?
num_challenges_by_author = db.challenge.count_documents({"author.id": "AI563576", "programming_language": {"$in": [1, 3]}})
print("Number of challenges written by author AI563576 in programming_language 1 or 3:", num_challenges_by_author)


5. How many documents are there where the challenges have been created by a female author and where the author belong to either the 'AOI100013' organisation or the 'AOI100018' organisation?
num_female_author_documents = db.challenge.count_documents({"author.gender": "F", "author.org_id": {"$in": ["AOI100013", "AOI100018"]}})
print("Number of documents where challenges have been created by a female author and belong to specified organisations:", num_female_author_documents)


6. Find the top 5 challenge ids where either the challenge has been attempted by exactly 100 `users` or where the `total_submissions` is between 100 and 200, both inclusive?
top_5_challenge_ids = db.challenge.find({
    "$or": [
        {"users": {"$size": 100}},
        {"total_submissions": {"$gte": 100, "$lte": 200}}
    ]
}, {"challenge_id": 1}).limit(5)
print("Top 5 challenge IDs:", [challenge["challenge_id"] for challenge in top_5_challenge_ids])



7. How documents are there where either the `publish_date > 2010-01-01` and `total_submissions > 100`, or the `publish_date < 2000-01-01` and `total_submissions > 1000` ?
num_documents_with_conditions = db.challenge.count_documents({
    "$or": [
        {"publish_date": {"$gt": datetime(2010, 1, 1)}, "total_submissions": {"$gt": 100}},
        {"publish_date": {"$lt": datetime(2000, 1, 1)}, "total_submissions": {"$gt": 1000}}
    ]
})
print("Number of documents with specified conditions:", num_documents_with_conditions)

